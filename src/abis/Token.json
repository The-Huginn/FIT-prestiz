{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ico",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocol",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ico\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Rastislav Budinsky implementing contract of FITCOIN token\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_ico\":\"the address of the ICO tokens are sent to\",\"_protocol\":\"the address of the protocol tokens are sent to\",\"_team\":\"the address of the team tokens are sent to\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"minting tokens to the team, ico and community. For minting rewards use function mint()\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/contracts/Token.sol\":{\"keccak256\":\"0x1bf5afa7a1f1dd44d433f440e3bb686e32c73e303b6636b5c6c6e5dfa1353bd6\",\"urls\":[\"bzz-raw://9ca7ca551373da993dd821b0d032d384500fb86647f2650a7ae07cc86eff2430\",\"dweb:/ipfs/Qme3YRb2vbxAf9BqZTKog39vg2Yh94D4m5XMgVBQ3dwrBh\"]},\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/interfaces/IERC20.sol\":{\"keccak256\":\"0x70a8d7746e9a06f4599b969aacadb3dec54b7f091f97a6b7bf292750871af8c4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://81077f3b4c60218ab05a45264db90bec858a3fce577eb3ed70cc7447b493dfd0\",\"dweb:/ipfs/QmWKdQ3aqsU4fUUeR8Vpbyem5QboMQ1YjVaAzDW4mC7eTm\"]},\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/Address.sol\":{\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\",\"urls\":[\"bzz-raw://d7d668a3725d635f007cd07ab715b77af94236eadecb57d657c839768907f0d7\",\"dweb:/ipfs/QmeuCqynaCrQA1Fyj1pZZp2irfnqeMAwmxapcTTsotsHB9\"]},\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/Context.sol\":{\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63ed2e7f493fb37258ef05e0c41caf4e90ec7243aa849ff87c2d410f582a6daa\",\"dweb:/ipfs/QmQcMz5FX8NtAS1XzSRQFfDtmJ4yMeQBruyJYDVkzp1Caj\"]},\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/ERC20.sol\":{\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cede3dcb3d9092e0403b642dd0e9aef6201db7d092f74942ef10af7ed5fded3a\",\"dweb:/ipfs/QmZfq8nfwtK5UPkdtsiNd2YN4tgP4tjTFseovXYnoBdtwK\"]},\"/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/SafeMath.sol\":{\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\",\"urls\":[\"bzz-raw://1161469d027aed0e99de03200c04129880d7c70c81d2db92b8cb5e58d6f6d609\",\"dweb:/ipfs/QmSq13hRxU4NNBg9wLpdQ14ur6fzcGcG2riySmJmKQwEjP\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620015ca380380620015ca833981810160405260608110156200003757600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050506040518060400160405280600881526020017f46495420636f696e0000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f464954434f494e000000000000000000000000000000000000000000000000008152508160039080519060200190620000e0929190620003e4565b508060049080519060200190620000f9929190620003e4565b506012600560006101000a81548160ff021916908360ff160217905550505062000135836a03b8e97d229a2d548000006200017860201b60201c565b62000152826a03b8e97d229a2d548000006200017860201b60201c565b6200016f816a115eec47f6cf7e350000006200017860201b60201c565b5050506200049a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000230600083836200035660201b60201c565b6200024c816002546200035b60201b620009dc1790919060201c565b600281905550620002aa816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200035b60201b620009dc1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620003da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200041c576000855562000468565b82601f106200043757805160ff191683800117855562000468565b8280016001018555821562000468579182015b82811115620004675782518255916020019190600101906200044a565b5b5090506200047791906200047b565b5090565b5b80821115620004965760008160009055506001016200047c565b5090565b61112080620004aa6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146102c757806395d89b411461031f578063a457c2d7146103a2578063a9059cbb14610406578063d5abeb011461046a578063dd62ed3e14610488576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a057806323b872dd146101be578063313ce567146102425780633950935114610263575b600080fd5b6100c1610500565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a2565b60405180821515815260200191505060405180910390f35b6101a86105c0565b6040518082815260200191505060405180910390f35b61022a600480360360608110156101d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ca565b60405180821515815260200191505060405180910390f35b61024a6106a3565b604051808260ff16815260200191505060405180910390f35b6102af6004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ba565b60405180821515815260200191505060405180910390f35b610309600480360360208110156102dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061076d565b6040518082815260200191505060405180910390f35b6103276107b5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036757808201518184015260208101905061034c565b50505050905090810190601f1680156103945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ee600480360360408110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610857565b60405180821515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610924565b60405180821515815260200191505060405180910390f35b610472610942565b6040518082815260200191505060405180910390f35b6104ea6004803603604081101561049e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610955565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b60006105b66105af610a64565b8484610a6c565b6001905092915050565b6000600254905090565b60006105d7848484610c63565b610698846105e3610a64565b6106938560405180606001604052806028815260200161105560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610649610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b610a6c565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107636106c7610a64565b8461075e85600160006106d8610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109dc90919063ffffffff16565b610a6c565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561084d5780601f106108225761010080835404028352916020019161084d565b820191906000526020600020905b81548152906001019060200180831161083057829003601f168201915b5050505050905090565b600061091a610864610a64565b84610915856040518060600160405280602581526020016110c6602591396001600061088e610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b610a6c565b6001905092915050565b6000610938610931610a64565b8484610c63565b6001905092915050565b60006a18d0bf423c03d8de000000905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110a26024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061100d6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061107d6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fea6023913960400191505060405180910390fd5b610d7a838383610fe4565b610de58160405180606001604052806026815260200161102f602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e78816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109dc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610fd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f96578082015181840152602081019050610f7b565b50505050905090810190601f168015610fc35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220644ccedd0def88b4d7fba91b2da18bedd1d86af3a5c2ec23d1441256a6ddcd5364736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146102c757806395d89b411461031f578063a457c2d7146103a2578063a9059cbb14610406578063d5abeb011461046a578063dd62ed3e14610488576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a057806323b872dd146101be578063313ce567146102425780633950935114610263575b600080fd5b6100c1610500565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a2565b60405180821515815260200191505060405180910390f35b6101a86105c0565b6040518082815260200191505060405180910390f35b61022a600480360360608110156101d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ca565b60405180821515815260200191505060405180910390f35b61024a6106a3565b604051808260ff16815260200191505060405180910390f35b6102af6004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ba565b60405180821515815260200191505060405180910390f35b610309600480360360208110156102dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061076d565b6040518082815260200191505060405180910390f35b6103276107b5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036757808201518184015260208101905061034c565b50505050905090810190601f1680156103945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ee600480360360408110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610857565b60405180821515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610924565b60405180821515815260200191505060405180910390f35b610472610942565b6040518082815260200191505060405180910390f35b6104ea6004803603604081101561049e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610955565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b60006105b66105af610a64565b8484610a6c565b6001905092915050565b6000600254905090565b60006105d7848484610c63565b610698846105e3610a64565b6106938560405180606001604052806028815260200161105560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610649610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b610a6c565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107636106c7610a64565b8461075e85600160006106d8610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109dc90919063ffffffff16565b610a6c565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561084d5780601f106108225761010080835404028352916020019161084d565b820191906000526020600020905b81548152906001019060200180831161083057829003601f168201915b5050505050905090565b600061091a610864610a64565b84610915856040518060600160405280602581526020016110c6602591396001600061088e610a64565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b610a6c565b6001905092915050565b6000610938610931610a64565b8484610c63565b6001905092915050565b60006a18d0bf423c03d8de000000905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110a26024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061100d6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061107d6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fea6023913960400191505060405180910390fd5b610d7a838383610fe4565b610de58160405180606001604052806026815260200161102f602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f249092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e78816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109dc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610fd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f96578082015181840152602081019050610f7b565b50505050905090810190601f168015610fc35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220644ccedd0def88b4d7fba91b2da18bedd1d86af3a5c2ec23d1441256a6ddcd5364736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "277:1006:4:-:0;;;991:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:4;;;;;;;;;;;;;;;;;1063:6;;;;;;;;;;;;;;;;;2080:4:11;2072:5;:12;;;;;;;;;;;;:::i;:::-;;2104:6;2094:7;:16;;;;;;;;;;;;:::i;:::-;;2132:2;2120:9;;:14;;;;;;;;;;;;;;;;;;2000:141;;1080:25:4::1;1086:5;601:13;1080:5;;;:25;;:::i;:::-;1115:23;1121:4;544:13;1115:5;;;:23;;:::i;:::-;1148:33;1154:9;662:14;1148:5;;;:33;;:::i;:::-;991:197:::0;;;277:1006;;7822:370:11;7924:1;7905:21;;:7;:21;;;;7897:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7973:49;8002:1;8006:7;8015:6;7973:20;;;:49;;:::i;:::-;8048:24;8065:6;8048:12;;:16;;;;;;:24;;;;:::i;:::-;8033:12;:39;;;;8103:30;8126:6;8103:9;:18;8113:7;8103:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8082:9;:18;8092:7;8082:18;;;;;;;;;;;;;;;:51;;;;8169:7;8148:37;;8165:1;8148:37;;;8178:6;8148:37;;;;;;;;;;;;;;;;;;7822:370;;:::o;10684:92::-;;;;:::o;834:176:12:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;277:1006:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "277:1006:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4242:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3249:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4868:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3108:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5580:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3405:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2400:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6282:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3725:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1198:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3955:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2206:81;2243:13;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81;:::o;4242:166::-;4325:4;4341:39;4350:12;:10;:12::i;:::-;4364:7;4373:6;4341:8;:39::i;:::-;4397:4;4390:11;;4242:166;;;;:::o;3249:98::-;3302:7;3328:12;;3321:19;;3249:98;:::o;4868:317::-;4974:4;4990:36;5000:6;5008:9;5019:6;4990:9;:36::i;:::-;5036:121;5045:6;5053:12;:10;:12::i;:::-;5067:89;5105:6;5067:89;;;;;;;;;;;;;;;;;:11;:19;5079:6;5067:19;;;;;;;;;;;;;;;:33;5087:12;:10;:12::i;:::-;5067:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5036:8;:121::i;:::-;5174:4;5167:11;;4868:317;;;;;:::o;3108:81::-;3149:5;3173:9;;;;;;;;;;;3166:16;;3108:81;:::o;5580:215::-;5668:4;5684:83;5693:12;:10;:12::i;:::-;5707:7;5716:50;5755:10;5716:11;:25;5728:12;:10;:12::i;:::-;5716:25;;;;;;;;;;;;;;;:34;5742:7;5716:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5684:8;:83::i;:::-;5784:4;5777:11;;5580:215;;;;:::o;3405:117::-;3471:7;3497:9;:18;3507:7;3497:18;;;;;;;;;;;;;;;;3490:25;;3405:117;;;:::o;2400:85::-;2439:13;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:85;:::o;6282:266::-;6375:4;6391:129;6400:12;:10;:12::i;:::-;6414:7;6423:96;6462:15;6423:96;;;;;;;;;;;;;;;;;:11;:25;6435:12;:10;:12::i;:::-;6423:25;;;;;;;;;;;;;;;:34;6449:7;6423:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6391:8;:129::i;:::-;6537:4;6530:11;;6282:266;;;;:::o;3725:172::-;3811:4;3827:42;3837:12;:10;:12::i;:::-;3851:9;3862:6;3827:9;:42::i;:::-;3886:4;3879:11;;3725:172;;;;:::o;1198:81:4:-;1239:4;483:14;1255:17;;1198:81;:::o;3955:149:11:-;4044:7;4070:11;:18;4082:5;4070:18;;;;;;;;;;;;;;;:27;4089:7;4070:27;;;;;;;;;;;;;;;;4063:34;;3955:149;;;;:::o;834:176:12:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;590:104:10:-;643:15;677:10;670:17;;590:104;:::o;9346:340:11:-;9464:1;9447:19;;:5;:19;;;;9439:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9544:1;9525:21;;:7;:21;;;;9517:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9626:6;9596:11;:18;9608:5;9596:18;;;;;;;;;;;;;;;:27;9615:7;9596:27;;;;;;;;;;;;;;;:36;;;;9663:7;9647:32;;9656:5;9647:32;;;9672:6;9647:32;;;;;;;;;;;;;;;;;;9346:340;;;:::o;7022:530::-;7145:1;7127:20;;:6;:20;;;;7119:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7228:1;7207:23;;:9;:23;;;;7199:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7281:47;7302:6;7310:9;7321:6;7281:20;:47::i;:::-;7359:71;7381:6;7359:71;;;;;;;;;;;;;;;;;:9;:17;7369:6;7359:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7339:9;:17;7349:6;7339:17;;;;;;;;;;;;;;;:91;;;;7463:32;7488:6;7463:9;:20;7473:9;7463:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7440:9;:20;7450:9;7440:20;;;;;;;;;;;;;;;:55;;;;7527:9;7510:35;;7519:6;7510:35;;;7538:6;7510:35;;;;;;;;;;;;;;;;;;7022:530;;;:::o;1692:187:12:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;10684:92:11:-;;;;:::o",
  "source": "/**\n* @author Rastislav Budinsky\n* @file Token.sol\n* @date 22.6.2021\n* This file contains declaration of Token contract\n*/\n\npragma solidity ^0.7.5;\n\nimport {ERC20} from '../open-zeppelin/ERC20.sol';\n\n/**\n* @author Rastislav Budinsky\n* implementing contract of FITCOIN token\n*/\ncontract Token is ERC20 {\n    string internal constant NAME = \"FIT coin\";\n    string internal constant SYMBOL = \"FITCOIN\";\n    uint8 internal constant DECIMALS = 18;\n    uint internal constant _maxSupply = 30000000 ether;\n    \n    uint internal constant ICO_AMOUNT = 4500000 ether;\n\n    uint internal constant TEAM_AMOUNT = 4500000 ether;\n\n    uint internal constant PROTOCOL_AMOUNT = 21000000 ether;\n\n    /**\n    * @notice minting tokens to the team, ico and community. For minting rewards use function mint()\n    * @param _team the address of the team tokens are sent to\n    * @param _ico the address of the ICO tokens are sent to\n    * @param _protocol the address of the protocol tokens are sent to\n    */\n    constructor(address _team, address _ico, address _protocol) ERC20(NAME, SYMBOL){\n        _mint(_team, TEAM_AMOUNT);\n        _mint(_ico, ICO_AMOUNT);\n        _mint(_protocol, PROTOCOL_AMOUNT);\n    }\n    \n    function maxSupply() public view returns(uint) {\n        return _maxSupply;\n    }\n\n\n}",
  "sourcePath": "/home/huginn/Desktop/Projects/FIT-prestiz/Token/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/huginn/Desktop/Projects/FIT-prestiz/Token/contracts/Token.sol",
    "exportedSymbols": {
      "ERC20": [
        1766
      ],
      "Token": [
        539
      ]
    },
    "id": 540,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 474,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "124:23:4"
      },
      {
        "absolutePath": "/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/ERC20.sol",
        "file": "../open-zeppelin/ERC20.sol",
        "id": 476,
        "nodeType": "ImportDirective",
        "scope": 540,
        "sourceUnit": 1767,
        "src": "149:49:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 475,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "157:5:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 478,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "295:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1766",
                "typeString": "contract ERC20"
              }
            },
            "id": 479,
            "nodeType": "InheritanceSpecifier",
            "src": "295:5:4"
          }
        ],
        "contractDependencies": [
          1172,
          1259,
          1766
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 477,
          "nodeType": "StructuredDocumentation",
          "src": "200:76:4",
          "text": " @author Rastislav Budinsky\n implementing contract of FITCOIN token"
        },
        "fullyImplemented": true,
        "id": 539,
        "linearizedBaseContracts": [
          539,
          1766,
          1172,
          1259
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 482,
            "mutability": "constant",
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "307:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 480,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "307:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "46495420636f696e",
              "id": 481,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "339:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3042e1fcde0955370cb1a390343297db3a569effe5e3ba11ca3303c4f3483eab",
                "typeString": "literal_string \"FIT coin\""
              },
              "value": "FIT coin"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 485,
            "mutability": "constant",
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "355:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 483,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "355:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "464954434f494e",
              "id": 484,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "389:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bf41557853d4e9f84c6fe0b21463be1e168e90fde398dffb006bfa925d40bdbb",
                "typeString": "literal_string \"FITCOIN\""
              },
              "value": "FITCOIN"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 488,
            "mutability": "constant",
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "404:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 486,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "404:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "439:2:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 491,
            "mutability": "constant",
            "name": "_maxSupply",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "447:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 489,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "447:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330303030303030",
              "id": 490,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "483:14:4",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30000000000000000000000000_by_1",
                "typeString": "int_const 30000000000000000000000000"
              },
              "value": "30000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 494,
            "mutability": "constant",
            "name": "ICO_AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "508:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 492,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "508:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34353030303030",
              "id": 493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:13:4",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4500000000000000000000000_by_1",
                "typeString": "int_const 4500000000000000000000000"
              },
              "value": "4500000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 497,
            "mutability": "constant",
            "name": "TEAM_AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "564:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 495,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "564:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34353030303030",
              "id": 496,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "601:13:4",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4500000000000000000000000_by_1",
                "typeString": "int_const 4500000000000000000000000"
              },
              "value": "4500000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 500,
            "mutability": "constant",
            "name": "PROTOCOL_AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 539,
            "src": "621:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 498,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "621:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231303030303030",
              "id": 499,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "662:14:4",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21000000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "1070:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 515,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "1086:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 516,
                        "name": "TEAM_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "1093:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 514,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1642,
                      "src": "1080:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:25:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 520,
                        "name": "_ico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "1121:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 521,
                        "name": "ICO_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "1127:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 519,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1642,
                      "src": "1115:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 525,
                        "name": "_protocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "1154:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "PROTOCOL_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "1165:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 524,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1642,
                      "src": "1148:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:33:4"
                }
              ]
            },
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "683:303:4",
              "text": " @notice minting tokens to the team, ico and community. For minting rewards use function mint()\n @param _team the address of the team tokens are sent to\n @param _ico the address of the ICO tokens are sent to\n @param _protocol the address of the protocol tokens are sent to"
            },
            "id": 530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 510,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 482,
                    "src": "1057:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 511,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 485,
                    "src": "1063:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 512,
                "modifierName": {
                  "id": 509,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1766,
                  "src": "1051:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1766_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1051:19:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_team",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1003:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "_ico",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1018:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_protocol",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1032:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:48:4"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:4"
            },
            "scope": 539,
            "src": "991:197:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "1245:34:4",
              "statements": [
                {
                  "expression": {
                    "id": 535,
                    "name": "_maxSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 491,
                    "src": "1262:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 534,
                  "id": 536,
                  "nodeType": "Return",
                  "src": "1255:17:4"
                }
              ]
            },
            "functionSelector": "d5abeb01",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:4"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1239:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:6:4"
            },
            "scope": 539,
            "src": "1198:81:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 540,
        "src": "277:1006:4"
      }
    ],
    "src": "124:1159:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/huginn/Desktop/Projects/FIT-prestiz/Token/contracts/Token.sol",
      "exportedSymbols": {
        "ERC20": [
          1766
        ],
        "Token": [
          539
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".5"
          ]
        },
        "id": 474,
        "name": "PragmaDirective",
        "src": "124:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 1767,
          "absolutePath": "/home/huginn/Desktop/Projects/FIT-prestiz/Token/open-zeppelin/ERC20.sol",
          "file": "../open-zeppelin/ERC20.sol",
          "scope": 540,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "ERC20"
                },
                "id": 475,
                "name": "Identifier",
                "src": "157:5:4"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 476,
        "name": "ImportDirective",
        "src": "149:49:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1172,
            1259,
            1766
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            539,
            1766,
            1172,
            1259
          ],
          "name": "Token",
          "scope": 540
        },
        "children": [
          {
            "attributes": {
              "text": " @author Rastislav Budinsky\n implementing contract of FITCOIN token"
            },
            "id": 477,
            "name": "StructuredDocumentation",
            "src": "200:76:4"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 1766,
                  "type": "contract ERC20"
                },
                "id": 478,
                "name": "UserDefinedTypeName",
                "src": "295:5:4"
              }
            ],
            "id": 479,
            "name": "InheritanceSpecifier",
            "src": "295:5:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "NAME",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 480,
                "name": "ElementaryTypeName",
                "src": "307:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "46495420636f696e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"FIT coin\"",
                  "value": "FIT coin"
                },
                "id": 481,
                "name": "Literal",
                "src": "339:10:4"
              }
            ],
            "id": 482,
            "name": "VariableDeclaration",
            "src": "307:42:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "SYMBOL",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 483,
                "name": "ElementaryTypeName",
                "src": "355:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "464954434f494e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"FITCOIN\"",
                  "value": "FITCOIN"
                },
                "id": 484,
                "name": "Literal",
                "src": "389:9:4"
              }
            ],
            "id": 485,
            "name": "VariableDeclaration",
            "src": "355:43:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "DECIMALS",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 486,
                "name": "ElementaryTypeName",
                "src": "404:5:4"
              },
              {
                "attributes": {
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 487,
                "name": "Literal",
                "src": "439:2:4"
              }
            ],
            "id": 488,
            "name": "VariableDeclaration",
            "src": "404:37:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_maxSupply",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 489,
                "name": "ElementaryTypeName",
                "src": "447:4:4"
              },
              {
                "attributes": {
                  "hexvalue": "3330303030303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": "ether",
                  "token": "number",
                  "type": "int_const 30000000000000000000000000",
                  "value": "30000000"
                },
                "id": 490,
                "name": "Literal",
                "src": "483:14:4"
              }
            ],
            "id": 491,
            "name": "VariableDeclaration",
            "src": "447:50:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "ICO_AMOUNT",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 492,
                "name": "ElementaryTypeName",
                "src": "508:4:4"
              },
              {
                "attributes": {
                  "hexvalue": "34353030303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": "ether",
                  "token": "number",
                  "type": "int_const 4500000000000000000000000",
                  "value": "4500000"
                },
                "id": 493,
                "name": "Literal",
                "src": "544:13:4"
              }
            ],
            "id": 494,
            "name": "VariableDeclaration",
            "src": "508:49:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "TEAM_AMOUNT",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 495,
                "name": "ElementaryTypeName",
                "src": "564:4:4"
              },
              {
                "attributes": {
                  "hexvalue": "34353030303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": "ether",
                  "token": "number",
                  "type": "int_const 4500000000000000000000000",
                  "value": "4500000"
                },
                "id": 496,
                "name": "Literal",
                "src": "601:13:4"
              }
            ],
            "id": 497,
            "name": "VariableDeclaration",
            "src": "564:50:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "PROTOCOL_AMOUNT",
              "scope": 539,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 498,
                "name": "ElementaryTypeName",
                "src": "621:4:4"
              },
              {
                "attributes": {
                  "hexvalue": "3231303030303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": "ether",
                  "token": "number",
                  "type": "int_const 21000000000000000000000000",
                  "value": "21000000"
                },
                "id": 499,
                "name": "Literal",
                "src": "662:14:4"
              }
            ],
            "id": 500,
            "name": "VariableDeclaration",
            "src": "621:55:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 539,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice minting tokens to the team, ico and community. For minting rewards use function mint()\n @param _team the address of the team tokens are sent to\n @param _ico the address of the ICO tokens are sent to\n @param _protocol the address of the protocol tokens are sent to"
                },
                "id": 501,
                "name": "StructuredDocumentation",
                "src": "683:303:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_team",
                      "scope": 530,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 502,
                        "name": "ElementaryTypeName",
                        "src": "1003:7:4"
                      }
                    ],
                    "id": 503,
                    "name": "VariableDeclaration",
                    "src": "1003:13:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ico",
                      "scope": 530,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 504,
                        "name": "ElementaryTypeName",
                        "src": "1018:7:4"
                      }
                    ],
                    "id": 505,
                    "name": "VariableDeclaration",
                    "src": "1018:12:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_protocol",
                      "scope": 530,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 506,
                        "name": "ElementaryTypeName",
                        "src": "1032:7:4"
                      }
                    ],
                    "id": 507,
                    "name": "VariableDeclaration",
                    "src": "1032:17:4"
                  }
                ],
                "id": 508,
                "name": "ParameterList",
                "src": "1002:48:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 513,
                "name": "ParameterList",
                "src": "1070:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1766,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 509,
                    "name": "Identifier",
                    "src": "1051:5:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 482,
                      "type": "string memory",
                      "value": "NAME"
                    },
                    "id": 510,
                    "name": "Identifier",
                    "src": "1057:4:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 485,
                      "type": "string memory",
                      "value": "SYMBOL"
                    },
                    "id": 511,
                    "name": "Identifier",
                    "src": "1063:6:4"
                  }
                ],
                "id": 512,
                "name": "ModifierInvocation",
                "src": "1051:19:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1642,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 514,
                            "name": "Identifier",
                            "src": "1080:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 503,
                              "type": "address",
                              "value": "_team"
                            },
                            "id": 515,
                            "name": "Identifier",
                            "src": "1086:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 497,
                              "type": "uint256",
                              "value": "TEAM_AMOUNT"
                            },
                            "id": 516,
                            "name": "Identifier",
                            "src": "1093:11:4"
                          }
                        ],
                        "id": 517,
                        "name": "FunctionCall",
                        "src": "1080:25:4"
                      }
                    ],
                    "id": 518,
                    "name": "ExpressionStatement",
                    "src": "1080:25:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1642,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 519,
                            "name": "Identifier",
                            "src": "1115:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 505,
                              "type": "address",
                              "value": "_ico"
                            },
                            "id": 520,
                            "name": "Identifier",
                            "src": "1121:4:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 494,
                              "type": "uint256",
                              "value": "ICO_AMOUNT"
                            },
                            "id": 521,
                            "name": "Identifier",
                            "src": "1127:10:4"
                          }
                        ],
                        "id": 522,
                        "name": "FunctionCall",
                        "src": "1115:23:4"
                      }
                    ],
                    "id": 523,
                    "name": "ExpressionStatement",
                    "src": "1115:23:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1642,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 524,
                            "name": "Identifier",
                            "src": "1148:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 507,
                              "type": "address",
                              "value": "_protocol"
                            },
                            "id": 525,
                            "name": "Identifier",
                            "src": "1154:9:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 500,
                              "type": "uint256",
                              "value": "PROTOCOL_AMOUNT"
                            },
                            "id": 526,
                            "name": "Identifier",
                            "src": "1165:15:4"
                          }
                        ],
                        "id": 527,
                        "name": "FunctionCall",
                        "src": "1148:33:4"
                      }
                    ],
                    "id": 528,
                    "name": "ExpressionStatement",
                    "src": "1148:33:4"
                  }
                ],
                "id": 529,
                "name": "Block",
                "src": "1070:118:4"
              }
            ],
            "id": 530,
            "name": "FunctionDefinition",
            "src": "991:197:4"
          },
          {
            "attributes": {
              "functionSelector": "d5abeb01",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "maxSupply",
              "scope": 539,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 531,
                "name": "ParameterList",
                "src": "1216:2:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 532,
                        "name": "ElementaryTypeName",
                        "src": "1239:4:4"
                      }
                    ],
                    "id": 533,
                    "name": "VariableDeclaration",
                    "src": "1239:4:4"
                  }
                ],
                "id": 534,
                "name": "ParameterList",
                "src": "1238:6:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 534
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 491,
                          "type": "uint256",
                          "value": "_maxSupply"
                        },
                        "id": 535,
                        "name": "Identifier",
                        "src": "1262:10:4"
                      }
                    ],
                    "id": 536,
                    "name": "Return",
                    "src": "1255:17:4"
                  }
                ],
                "id": 537,
                "name": "Block",
                "src": "1245:34:4"
              }
            ],
            "id": 538,
            "name": "FunctionDefinition",
            "src": "1198:81:4"
          }
        ],
        "id": 539,
        "name": "ContractDefinition",
        "src": "277:1006:4"
      }
    ],
    "id": 540,
    "name": "SourceUnit",
    "src": "124:1159:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-30T16:10:48.269Z",
  "devdoc": {
    "author": "Rastislav Budinsky implementing contract of FITCOIN token",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "params": {
          "_ico": "the address of the ICO tokens are sent to",
          "_protocol": "the address of the protocol tokens are sent to",
          "_team": "the address of the team tokens are sent to"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "minting tokens to the team, ico and community. For minting rewards use function mint()"
      }
    },
    "version": 1
  }
}